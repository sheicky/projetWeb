{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Login from './components/Login.vue';\nimport Register from './components/Register.vue';\nimport ResetPassword from './components/ResetPassword.vue';\nimport UpdatePassword from './components/UpdatePassword.vue';\nimport VerifyEmail from './components/VerifyEmail.vue';\nimport UserDashboard from './components/UserDashboard.vue';\nimport AdminDashboard from './components/AdminDashboard.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  component: Login\n}, {\n  path: '/register',\n  component: Register\n}, {\n  path: '/reset-password/:resetToken',\n  component: ResetPassword\n}, {\n  path: '/update-password',\n  component: UpdatePassword\n}, {\n  path: '/verify-email',\n  component: VerifyEmail\n}, {\n  path: '/user',\n  component: UserDashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/admin',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const isLoggedIn = user && user.token;\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next('/login');\n    } else if (to.matched.some(record => record.meta.requiresAdmin)) {\n      if (user.role !== 'admin') {\n        next('/user');\n      } else {\n        next();\n      }\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Register","ResetPassword","UpdatePassword","VerifyEmail","UserDashboard","AdminDashboard","routes","path","redirect","component","meta","requiresAuth","requiresAdmin","router","history","beforeEach","to","from","next","user","JSON","parse","localStorage","getItem","isLoggedIn","token","matched","some","record","role"],"sources":["C:/Developpement/projetWeb/projetWeb/client/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Login from './components/Login.vue';\r\nimport Register from './components/Register.vue';\r\nimport ResetPassword from './components/ResetPassword.vue';\r\nimport UpdatePassword from './components/UpdatePassword.vue';\r\nimport VerifyEmail from './components/VerifyEmail.vue';\r\nimport UserDashboard from './components/UserDashboard.vue';\r\nimport AdminDashboard from './components/AdminDashboard.vue';\r\n\r\nconst routes = [\r\n  { path: '/', redirect: '/login' },\r\n  { path: '/login', component: Login },\r\n  { path: '/register', component: Register },\r\n  { path: '/reset-password/:resetToken', component: ResetPassword },\r\n  { path: '/update-password', component: UpdatePassword },\r\n  { path: '/verify-email', component: VerifyEmail },\r\n  { path: '/user', component: UserDashboard, meta: { requiresAuth: true } },\r\n  { path: '/admin', component: AdminDashboard, meta: { requiresAuth: true, requiresAdmin: true } }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const isLoggedIn = user && user.token;\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!isLoggedIn) {\r\n      next('/login');\r\n    } else if (to.matched.some(record => record.meta.requiresAdmin)) {\r\n      if (user.role !== 'admin') {\r\n        next('/user');\r\n      } else {\r\n        next();\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,iCAAiC;AAE5D,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAS,CAAC,EACjC;EAAED,IAAI,EAAE,QAAQ;EAAEE,SAAS,EAAEV;AAAM,CAAC,EACpC;EAAEQ,IAAI,EAAE,WAAW;EAAEE,SAAS,EAAET;AAAS,CAAC,EAC1C;EAAEO,IAAI,EAAE,6BAA6B;EAAEE,SAAS,EAAER;AAAc,CAAC,EACjE;EAAEM,IAAI,EAAE,kBAAkB;EAAEE,SAAS,EAAEP;AAAe,CAAC,EACvD;EAAEK,IAAI,EAAE,eAAe;EAAEE,SAAS,EAAEN;AAAY,CAAC,EACjD;EAAEI,IAAI,EAAE,OAAO;EAAEE,SAAS,EAAEL,aAAa;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACzE;EAAEJ,IAAI,EAAE,QAAQ;EAAEE,SAAS,EAAEJ,cAAc;EAAEK,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,aAAa,EAAE;EAAK;AAAE,CAAC,CACjG;AAED,MAAMC,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BQ;AACF,CAAC,CAAC;AAEFO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,UAAU,GAAGL,IAAI,IAAIA,IAAI,CAACM,KAAK;EAErC,IAAIT,EAAE,CAACU,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAClB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACa,UAAU,EAAE;MACfN,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM,IAAIF,EAAE,CAACU,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAClB,IAAI,CAACE,aAAa,CAAC,EAAE;MAC/D,IAAIO,IAAI,CAACU,IAAI,KAAK,OAAO,EAAE;QACzBX,IAAI,CAAC,OAAO,CAAC;MACf,CAAC,MAAM;QACLA,IAAI,CAAC,CAAC;MACR;IACF,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}